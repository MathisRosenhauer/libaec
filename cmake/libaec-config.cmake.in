# libaec-config.cmake
# ----------------
#
# Finds the AEC library, specify the starting search path in libaec_ROOT.
#
# Static vs. shared
# -----------------
# To make use of the static library instead of the shared one, one needs
# to set the variable libaec_USE_STATIC_LIBS to ON before calling find_package.
# Example:
#   set(libaec_USE_STATIC_LIBS ON)
#   find_package(libaec CONFIG)
#
# This will define the following variables:
#
#   libaec_FOUND   - True if the system has the AEC library.
#   libaec_VERSION - The version of the AEC library which was found.
#   SZIP_FOUND     - True if the system has the SZIP library.
#   SZIP_VERSION   - The version of the SZIP library which was found.
#   SZIP_LIBRARIES - All the required libraries to make use of SZIP.
#
# and the following imported targets:
#
#   libaec::aec-shared  - The shared AEC library target (if it was built).
#   libaec::sz-shared   - The shared SZIP compatible version of the AEC library
#                         (if it was built).
#   libaec::aec-static  - The static AEC library target (if it was built).
#   libaec::sz-static   - The static SZIP compatible version of the AEC library
#                         (if it was built).
#   libaec::aec         - The (shared or static) AEC library target (according
#                         to the value of libaec_USE_STATIC_LIBS).
#   libaec::sz          - The (shared or static) SZIP compatible version of the
#                         AEC library (according to the value of
#                         libaec_USE_STATIC_LIBS).

find_path(libaec_INCLUDE_DIR NAMES libaec.h DOC "AEC include directory")
find_path(SZIP_INCLUDE_DIR NAMES szlib.h DOC "SZIP include directory")
find_library(libaec-shared_LIBRARY NAMES aec DOC "AEC library")
find_library(SZIP-shared_LIBRARY NAMES sz szip DOC "SZIP compatible version of the AEC library")
if (MSVC)
  find_library(libaec-static_LIBRARY NAMES aec-static.lib DOC "AEC library")
  find_library(SZIP-static_LIBRARY NAMES szip-static.lib DOC "SZIP compatible version of the AEC library")
else ()
  find_library(libaec-static_LIBRARY NAMES libaec.a DOC "AEC library")
  find_library(SZIP-static_LIBRARY NAMES libsz.a DOC "SZIP compatible version of the AEC library")
endif ()
if (libaec_USE_STATIC_LIBS)
  set(libaec_LIBRARY ${libaec-static_LIBRARY})
  set(SZIP_LIBRARY ${SZIP-static_LIBRARY})
else ()
  set(libaec_LIBRARY ${libaec-shared_LIBRARY})
  set(SZIP_LIBRARY ${SZIP-shared_LIBRARY})
endif ()

# Check version here
if (libaec_INCLUDE_DIR AND libaec_LIBRARY)
  set(libaec_VERSION "@PROJECT_VERSION@")
  set(SZIP_VERSION "2.0.1")
endif ()

include(FindPackageHandleStandardArgs)
set(${CMAKE_FIND_PACKAGE_NAME}_CONFIG "${CMAKE_CURRENT_LIST_FILE}")
find_package_handle_standard_args(libaec
  FOUND_VAR libaec_FOUND
  REQUIRED_VARS libaec_LIBRARY libaec_INCLUDE_DIR SZIP_LIBRARY SZIP_INCLUDE_DIR
  VERSION_VAR libaec_VERSION
  CONFIG_MODE
)

if (libaec_FOUND)
  if (libaec-static_LIBRARY)
    add_library(libaec::aec-static STATIC IMPORTED)
    set_target_properties(libaec::aec-static PROPERTIES
      IMPORTED_LOCATION "${libaec-static_LIBRARY}"
      INTERFACE_INCLUDE_DIRECTORIES "${libaec_INCLUDE_DIR}"
    )
  endif ()
  if (libaec-static_LIBRARY)
    add_library(libaec::aec-shared STATIC IMPORTED)
    target_compile_definitions(libaec::aec-shared INTERFACE LIBAEC_SHARED)
    if (WIN32)
      set_target_properties(libaec::aec-shared PROPERTIES
        IMPORTED_IMPLIB "${libaec_LIBRARY}"
      )
    endif ()
    set_target_properties(libaec::aec-shared PROPERTIES
      IMPORTED_LOCATION "${libaec-shared_LIBRARY}"
      INTERFACE_INCLUDE_DIRECTORIES "${libaec_INCLUDE_DIR}"
    )
  endif ()
  if (libaec_USE_STATIC_LIBS)
    add_library(libaec::aec ALIAS libaec::aec-static)
  else ()
    add_library(libaec::aec ALIAS libaec::aec-shared)
  endif ()

  # SZIP
  if (SZIP-static_LIBRARY)
    add_library(libaec::sz-static STATIC IMPORTED)
    set_target_properties(libaec::sz-static PROPERTIES
      IMPORTED_LOCATION "${SZIP-static_LIBRARY}"
      INTERFACE_INCLUDE_DIRECTORIES "${SZIP_INCLUDE_DIR}"
    )
  endif ()
  if (libaec-static_LIBRARY)
    add_library(libaec::sz-shared SHARED IMPORTED)
    target_compile_definitions(libaec::sz-shared INTERFACE LIBAEC_SHARED)
    if (WIN32)
      set_target_properties(libaec::sz-shared PROPERTIES
        IMPORTED_IMPLIB "${SZIP-shared_LIBRARY}"
      )
    endif ()
    set_target_properties(libaec::sz-shared PROPERTIES
      IMPORTED_LOCATION "${SZIP-shared_LIBRARY}"
      INTERFACE_INCLUDE_DIRECTORIES "${SZIP_INCLUDE_DIR}"
    )
  endif ()
  if (libaec_USE_STATIC_LIBS)
    add_library(libaec::sz ALIAS libaec::sz-static)
  else ()
    add_library(libaec::sz ALIAS libaec::sz-shared)
  endif ()

  # Set SZIP variables.
  set(SZIP_FOUND TRUE)
  set(SZIP_LIBRARIES "${SZIP_LIBRARY}")
endif ()

mark_as_advanced(
  libaec_LIBRARY
  libaec-shared_LIBRARY
  libaec-static_LIBRARY
  libaec_INCLUDE_DIR
  SZIP_LIBRARY
  SZIP-shared_LIBRARY
  SZIP-static_LIBRARY
  SZIP_INCLUDE_DIR
)
